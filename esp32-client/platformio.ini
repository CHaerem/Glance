[env:huzzah32]
platform = espressif32
board = featheresp32
framework = arduino
monitor_speed = 115200
upload_speed = 460800

; Library dependencies
lib_deps = 
    Wire
    ArduinoJson@6.18.5

; Build options for ESP32-PICO-V3-02 with embedded PSRAM and power optimization
build_flags =
    -DCORE_DEBUG_LEVEL=3
    -DARDUINOJSON_USE_LONG_LONG=1
    -DWIFI_SSID=\"${sysenv.WIFI_SSID}\"
    -DWIFI_PASSWORD=\"${sysenv.WIFI_PASSWORD}\"
    -DDEVICE_ID=\"${sysenv.DEVICE_ID}\"
    -DBOARD_HAS_PSRAM
    -DCONFIG_SPIRAM_SUPPORT=1
    -DCONFIG_SPIRAM_USE_CAPS_ALLOC=1
    -DCONFIG_SPIRAM_USE_MALLOC=1
    -mfix-esp32-psram-cache-issue
    -DCONFIG_PM_ENABLE=1
    -DCONFIG_ESP32_DEFAULT_CPU_FREQ_160=1
    -DCONFIG_ESP32_BROWNOUT_DET_LVL=3

; ESP32 Feather settings optimized for power efficiency
board_build.partitions = huge_app.csv
board_build.f_cpu = 160000000L  ; Reduced from 240MHz for power savings
board_build.f_flash = 40000000L

; Existing default environment for main firmware remains unchanged above

[env:huzzah32-historic]
platform = espressif32
board = featheresp32
framework = arduino
monitor_speed = 115200
upload_speed = 460800
lib_deps = 
    Wire
    ArduinoJson@6.18.5
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -DBOARD_HAS_PSRAM
    -DCONFIG_SPIRAM_SUPPORT=1
    -DCONFIG_SPIRAM_USE_CAPS_ALLOC=1
    -DCONFIG_SPIRAM_USE_MALLOC=1
    -mfix-esp32-psram-cache-issue
board_build.partitions = huge_app.csv
board_build.f_cpu = 160000000L
board_build.f_flash = 40000000L

; Build only historic test file by excluding the normal main.cpp
build_src_filter = 
    +<*.cpp>
    -<main.cpp>

; Good Display ESP32-133C02 board environment (ESP32-S3)
[env:gooddisplay_esp32]
platform = espressif32
board = freenove_esp32_s3_wroom
framework = arduino
monitor_speed = 115200
upload_speed = 115200

; Library dependencies
lib_deps =
    Wire
    ArduinoJson@6.18.5
    SPI

; Build options for ESP32-133C02
build_flags =
    -DCORE_DEBUG_LEVEL=4
    -DARDUINOJSON_USE_LONG_LONG=1
    -DWIFI_SSID=\"${sysenv.WIFI_SSID}\"
    -DWIFI_PASSWORD=\"${sysenv.WIFI_PASSWORD}\"
    -DDEVICE_ID=\"${sysenv.DEVICE_ID}\"
    -DBOARD_GOODDISPLAY_ESP32_133C02
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue

; ESP32-S3 settings with proper flash mode
board_build.partitions = huge_app.csv
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.flash_mode = dio
board_upload.flash_size = 8MB

; Test environment for Good Display board (ESP32-S3)
[env:gooddisplay_test]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200
upload_speed = 115200

lib_deps = 
    Wire
    SPI

build_flags = 
    -DCORE_DEBUG_LEVEL=5
    -DTEST_MODE

; Simple test program
build_src_filter = 
    +<test_display_clear_real.cpp>
    -<main.cpp>
    -<main_historic.cpp>
    -<test_gooddisplay.cpp>
    -<test_display_clear.cpp>
    -<test_display_simple.cpp>
    -<test_gooddisplay_clear.cpp>
    -<test_hardware_diagnostic.cpp>

; Hardware diagnostic environment
[env:diagnostic]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200
upload_speed = 115200

lib_deps = 
    Wire
    SPI

build_flags = 
    -DCORE_DEBUG_LEVEL=5
    -DDIAGNOSTIC_MODE

build_src_filter = 
    +<test_hardware_diagnostic.cpp>
    -<main.cpp>
    -<main_historic.cpp>
    -<test_gooddisplay.cpp>
    -<test_display_clear.cpp>
    -<test_display_simple.cpp>
    -<test_gooddisplay_clear.cpp>
    -<test_display_clear_real.cpp>
    -<test_gpio_scanner.cpp>

; GPIO pin scanner environment
[env:gpio_scanner]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200
upload_speed = 115200

build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -DGPIO_SCANNER_MODE

build_src_filter = 
    +<test_gpio_scanner.cpp>
    -<main.cpp>
    -<main_historic.cpp>
    -<test_gooddisplay.cpp>
    -<test_display_clear.cpp>
    -<test_display_simple.cpp>
    -<test_gooddisplay_clear.cpp>
    -<test_display_clear_real.cpp>
    -<test_hardware_diagnostic.cpp>