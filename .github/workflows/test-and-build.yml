name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || contains(github.event.head_commit.message, '[test]')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      working-directory: ./server
      run: |
        if [ -f package-lock.json ]; then
          npm ci --include=optional --no-audit --no-fund
        else
          npm install --include=optional --no-audit --no-fund
        fi

    - name: Run tests
      working-directory: ./server
      run: npm run test:ci
      timeout-minutes: 10

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./server/coverage/lcov.info
        directory: ./server/coverage/
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Run security audit
      working-directory: ./server
      run: npm audit --audit-level high

    - name: Run dependency check
      working-directory: ./server
      run: |
        npx audit-ci --config audit-ci.json || true

  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/glance-server
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        file: ./server/Dockerfile
        platforms: linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          IMAGE_VERSION=${{ github.sha }}
          BUILD_DATE=${{ github.event.head_commit.timestamp }}

    - name: Join tailnet (with SSH)
      uses: tailscale/github-action@v3
      with:
        oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
        tags: tag:ci
        args: --ssh

    - name: Deploy to serverpi
      run: |
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        tailscale ssh chris@100.74.55.82 \
          "cd ~/glance && IMAGE_VERSION=sha-${SHORT_SHA} docker compose pull && IMAGE_VERSION=sha-${SHORT_SHA} docker compose up -d"
